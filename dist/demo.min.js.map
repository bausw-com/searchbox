{"version":3,"file":"dist/demo.min.js","mappings":"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","sources":["webpack://searchbox/./node_modules/svelte/internal/index.mjs","webpack://searchbox/./src/searchbox-worker.ts","webpack://searchbox/./src/types.ts","webpack://searchbox/./src/searchbox.ts","webpack://searchbox/./src/components/Dropdown.svelte","webpack://searchbox/./src/components/Renderer.svelte","webpack://searchbox/./src/components/ResultItem.svelte","webpack://searchbox/./src/components/Results.svelte","webpack://searchbox/./src/strings.ts","webpack://searchbox/./src/helpers.ts","webpack://searchbox/./src/Searchbox.svelte","webpack://searchbox/./src/Demo.svelte","webpack://searchbox/./src/demo.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import type { ESearchboxCommand } from './types';\n\nexport class SearchboxWorker {\n  worker: Worker | null;\n\n  messageId: number = 0;\n\n  pendingReplies: Map<\n    number,\n    { resolve: (result: unknown) => void; reject: (reason?: unknown) => void }\n  > = new Map();\n\n  constructor(readonly scriptUrl: string) {\n    this.worker = new Worker(this.scriptUrl);\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  destroy() {\n    if (this.worker) {\n      this.worker.terminate();\n      this.worker = null;\n    }\n  }\n\n  async command<T>(command: ESearchboxCommand, params?: unknown): Promise<T> {\n    if (!this.worker) {\n      throw new Error('Worker destroyed');\n    }\n    this.messageId++;\n    const id = this.messageId;\n    const promise = new Promise<T>((resolve, reject) => {\n      this.pendingReplies.set(id, {\n        resolve,\n        reject,\n      });\n      this.worker.postMessage({\n        command,\n        id,\n        params,\n      });\n    });\n    return promise;\n  }\n\n  onMessage(ev: MessageEvent) {\n    const message = ev.data;\n    if (message && message.id) {\n      const promise = this.pendingReplies.get(message.id);\n      if (promise) {\n        if (message.error) {\n          promise.reject(message.error);\n        } else {\n          promise.resolve(message.result);\n        }\n        this.pendingReplies.delete(message.id);\n      }\n    }\n  }\n}\n","export type TTransformFunc = (\n  doc: IResultItemDoc,\n  item: IResultItem,\n  result: IResult\n) => IResultItemDoc;\n\nexport interface IManifestField {\n  boost?: number;\n  name: string;\n  search?: boolean;\n  suggestions?: boolean;\n}\n\nexport interface IManifest {\n  baseUrl?: string;\n  fields: IManifestField[];\n  data: string;\n  version?: string;\n}\n\nexport interface IOptions {\n  /**\n   * Dropdown alignment relative to the `anchor`.\n   */\n  align?: 'left' | 'right';\n\n  /**\n   * Dropdown anchor element for positioning and alignment. If not specified, the `input` will be used.\n   */\n  anchor?: HTMLElement;\n\n  /**\n   * A custom search function. Can be used to request external API.\n   */\n  customSearch?: (term: string, suggestions: boolean) => Promise<IResult>;\n\n  /**\n   * Grouping function or a parameter name. The function should return group identifier as string.\n   */\n  groupBy?: string | ((doc: IResultItemDoc) => string);\n\n  /**\n   * Whether to highight terms with <mark> tags.\n   */\n  highlight?: boolean;\n\n  /**\n   * Scripts to inject into the Worker. Use this for lunr.js languages or extensions.\n   */\n  injectScripts?: string[];\n\n  /**\n   * (Required) Input element\n   */\n  input: HTMLInputElement;\n\n  /**\n   * A list of languages to load into lunr.js instance (language scripts must be loaded with `injectScripts`).\n   */\n  languages?: string[];\n\n  /**\n   * Max. number of results to return (default: 100)\n   */\n  limit?: number;\n\n  /**\n   * Manifest URL or relative path.\n   */\n  manifest?: string;\n\n  /**\n   * A custom Lunr.js separator (RegExp)\n   */\n  separator?: string;\n\n  /**\n   * Whether to use suggestions\n   */\n  suggestions?: boolean;\n\n  /**\n   * A custom delay (in milliseconds) between the input focus and when the dropdown is shown.\n   */\n  dropdownDelay?: number;\n\n  /**\n   * A custom HTML element where the results will be rendered instead of the dropdown. Is specified, the dropdown won't be shown.\n   */\n  results?: HTMLElement;\n\n  /**\n   * Custom renderer functions. Supported functions: `header`, `footer`, `item`.\n   */\n  renderers?: IRenderers;\n\n  /**\n   * I18n strings override. See `src/strings.ts`.\n   */\n  strings?: Record<string, string>;\n\n  /**\n   * A custom function that transforms the result (each item).\n   */\n  transform?: TTransformFunc;\n\n  /**\n   * Worker URL or a relative path.\n   */\n  worker?: string;\n\n  /**\n   * Dropdown width (default: 100%)\n   */\n  width?: number;\n}\n\nexport interface IResultItemDoc {\n  category?: string;\n  icon?: string;\n  labels?: string;\n  link?: string;\n  title: string;\n  snippet?: string;\n  suggestion?: string;\n}\n\nexport interface IResultItem {\n  children?: IResultItem[];\n  doc: IResultItemDoc;\n  matchData: Record<string, any>;\n  ref: string;\n  score: number;\n}\n\nexport interface IResult {\n  manifest?: IManifest;\n  items?: IResultItem[];\n  time?: number;\n}\n\nexport interface IRenderers {\n  footer?: (result: IResult) => string | HTMLElement;\n  header?: (result: IResult) => string | HTMLElement;\n  item?: (item: IResultItem, result: IResult) => string | HTMLElement;\n}\n\nexport interface ISearchboxSearchOptions {\n  fields?: string[];\n  limit?: number;\n}\n\nexport enum ESearchboxCommand {\n  ENSURE_INDEX = 'ensureIndex',\n  SUGGESTIONS = 'suggestions',\n  SEARCH = 'search',\n}\n\nexport interface IMessage<T = any> {\n  command: ESearchboxCommand;\n  id: number;\n  params: T;\n}\n\nexport interface IMessageInitParams {\n  highlight?: boolean;\n  injectScripts?: string[];\n  languages?: string[];\n  name: string;\n  url: string;\n}\n\nexport interface IMessageSuggestionsParams {\n  index: string;\n  term: string;\n}\n\nexport interface IMessageSearchParams {\n  index: string;\n  options?: {\n    fields?: string[];\n    max?: number;\n  };\n  term: string;\n}\n\nexport interface ISearchboxIndexOptionsTokenizer {\n  separator?: string | RegExp;\n}\n\nexport interface ISearchboxIndexOptions {\n  b?: number;\n  highlight?: boolean;\n  injectScripts?: string[];\n  k1?: number;\n  languages?: string[];\n  separator?: string;\n  suggestions?: boolean;\n  tokenizer?: ISearchboxIndexOptionsTokenizer;\n  url: string;\n}\n","import { SearchboxWorker } from './searchbox-worker';\nimport {\n  ESearchboxCommand,\n  IResult,\n  ISearchboxIndexOptions,\n  ISearchboxSearchOptions,\n} from './types';\n\nexport class Searchbox {\n  readonly workers: Map<string, SearchboxWorker> = new Map();\n\n  constructor(readonly workerScriptUrl: string) {\n    // @ts-ignore\n    if (typeof workerScriptUrl !== 'string' && !!workerScriptUrl.target) {\n      throw new Error('Trying to create an instance of Searchbox class as component; Use SearchboxComponent instead.');\n    }\n  }\n\n  destroyIndex(index: string) {\n    try {\n      this.getWorker(index, false).destroy();\n    } catch (err) {\n      // noop\n    }\n  }\n\n  getWorker(index: string, create: boolean = false) {\n    const workerName = this.getWorkerName(index);\n    let worker = this.workers.get(workerName);\n    if (!worker && create) {\n      worker = new SearchboxWorker(this.workerScriptUrl);\n      this.workers.set(workerName, worker);\n    } else if (!worker) {\n      throw new Error(\n        `Worker for index '${index}' does not exist. Call ensureIndex() first.`\n      );\n    }\n    return worker;\n  }\n\n  getWorkerName(index: string) {\n    return index;\n  }\n\n  async ensureIndex(\n    index: string,\n    options: ISearchboxIndexOptions\n  ): Promise<unknown> {\n    return this.getWorker(index, true).command(\n      ESearchboxCommand.ENSURE_INDEX,\n      options\n    );\n  }\n\n  async suggestions(index: string, term: string): Promise<IResult> {\n    return this.getWorker(index).command(ESearchboxCommand.SUGGESTIONS, {\n      term,\n    });\n  }\n\n  async search(\n    index: string,\n    term: string,\n    options?: ISearchboxSearchOptions\n  ): Promise<IResult> {\n    return this.getWorker(index).command(ESearchboxCommand.SEARCH, {\n      options,\n      term,\n    });\n  }\n}\n","<script lang=\"ts\">\n\timport { onDestroy } from 'svelte';\n\n\texport let align: 'left' | 'right' = 'left';\n\texport let anchor: HTMLElement;\n\texport let offset: [ number, number ] = [ 0, -1 ];\n\texport let animationDuration: number = 350;\n\texport let pageOffset: number = 20;\n\texport let width: number = null;\n\n\tlet el: HTMLElement;\n\n\t$: computedStyles = el && getComputedStyle(el);\n\n\tonDestroy(() => {\n\t\tif (anchor) {\n\t\t\tanchor.classList.remove('searchbox-dropdown-visible');\n\t\t}\n\t});\n\n\tfunction onMouseDown(ev: MouseEvent) {\n\t\t// @ts-ignore\n\t\tif (ev.currentTarget.tagName !== 'A') {\n\t\t\tev.preventDefault();\n\t\t}\n\t}\n\n\texport function position() {\n\t\tif (anchor && el) {\n\t\t\tconst boundry = anchor.getBoundingClientRect();\n\t\t\tconst docHeight = document.documentElement.clientHeight;\n\t\t\tconst docWidth = document.documentElement.clientWidth;\n\t\t\tconst borderSize = parseInt(computedStyles.borderTopWidth, 10) + parseInt(computedStyles.borderBottomWidth, 10);\n\t\t\tconst maxHeight = Math.min(docHeight - (pageOffset * 2), docHeight - pageOffset - boundry.bottom);\n\t\t\tel.style.width = `${width || boundry.width}px`;\n\t\t\tel.style.top = `${boundry.bottom + offset[1]}px`;\n\t\t\tif (align === 'right') {\n\t\t\t\tel.style.left = `auto`;\n\t\t\t\tel.style.right = `${docWidth - (boundry.right + offset[0])}px`;\n\t\t\t} else {\n\t\t\t\tel.style.left = `${boundry.left + offset[0]}px`;\n\t\t\t\tel.style.right = `auto`;\n\t\t\t}\n\t\t\tel.style.maxHeight = `${maxHeight}px`;\n\t\t\tconst height = [...el.childNodes].reduce((acc, node) => {\n\t\t\t\tif (node instanceof Element) {\n\t\t\t\t\treturn acc + Math.max(node.getBoundingClientRect().height, node.scrollHeight);\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, borderSize);\n\t\t\tel.style.height = `${Math.min(maxHeight, height)}px`;\n\t\t\tanchor.classList.add('searchbox-dropdown-visible');\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (el) {\n\t\t\t\t\tel.style.height = `auto`;\n\t\t\t\t}\n\t\t\t}, animationDuration);\n\t\t}\n\t}\n</script>\n\n<div bind:this={el} class=\"searchbox-dropdown\" on:mousedown={onMouseDown}>\n\t<slot></slot>\n</div>","<script lang=\"ts\">\n\timport { afterUpdate } from \"svelte\";\n\n\texport let args: any[];\n\texport let renderer: (...args: any[]) => HTMLElement | string;\n\n\tlet el: HTMLElement;\n\n\t$: content = renderer(...args);\n\n\tafterUpdate(() => {\n\t\tif (content instanceof Element) {\n\t\t\tel.replaceWith(content);\n\t\t} else if (content) {\n\t\t\tel.innerHTML = content;\n\t\t}\n\t});\n</script>\n\n<div bind:this={el}></div>","<script lang=\"ts\">\n\timport { createEventDispatcher } from 'svelte';\n\timport Renderer from './Renderer.svelte';\n\timport type { IResultItem, IRenderers } from '../types';\n\n\texport let expanded: boolean = false;\n\texport let forceExpanded: boolean = false;\n\texport let i18n: Record<string, string>;\n\texport let item: IResultItem;\n\texport let renderer: IRenderers['item'] = null;\n\n\tconst dispatch = createEventDispatcher();\n\n\t$: labels = Array.isArray(item?.doc?.labels) ? item.doc.labels : item?.doc?.labels?.split(/[\\,\\;]/).filter((label) => !!label);\n\n\tfunction onClick(ev: Event) {\n\t\tif (!item.doc.link) {\n\t\t\tev.stopPropagation();\n\t\t\tev.preventDefault();\n\t\t\tdispatch('click', item);\n\t\t}\n\t}\n\n\tfunction onExpandChildrenClick() {\n\t\tdispatch('expand', item);\n\t}\n</script>\n\n<li class=\"searchbox-results-item\" on:click={onClick} class:searchbox-results-item-expanded={expanded}>\n\t{#if renderer}\n\t\t<Renderer {renderer} args={[item]} />\n\n\t{:else}\n\t<a href={item.doc.link} class=\"searchbox-results-link\" tabindex=\"-1\" data-ref={item.ref} on:click={onClick}>\n\t\t{#if item.doc.icon}\n\t\t<div class=\"searchbox-results-icon\">\n\t\t\t<img src={item.doc.icon} alt=\"icon\" />\n\t\t</div>\n\t\t{/if}\n\n\t\t<div>\n\t\t\t<div class=\"searchbox-results-title\">\n\t\t\t\t{@html item.doc.title}\n\t\t\t\t{#if labels?.length}\n\t\t\t\t\t{#each labels as label}\n\t\t\t\t\t<span class=\"searchbox-results-label\">{label}</span>\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t\t{#if item.doc.snippet}\n\t\t\t<div class=\"searchbox-results-snippet\">{@html item.doc.snippet}</div>\n\t\t\t{/if}\n\n\t\t</div>\n\t</a>\n\t{#if !forceExpanded && item.children?.length}\n\t<div class=\"searchbox-results-expand\">\n\t\t<button type=\"button\" on:click={() => onExpandChildrenClick()}>{i18n.more_on_this_page.replace('{count}', String(item.children.length))}</button>\n\t</div>\n\t{/if}\n\t{/if}\n</li>","<script lang=\"ts\">\n\timport { afterUpdate, createEventDispatcher, onMount } from 'svelte';\n\timport Renderer from './Renderer.svelte';\n\timport ResultItem from './ResultItem.svelte';\n\timport type { IRenderers, IResult, IResultItem } from '../types';\n\n\texport let category: string = null;\n\texport let i18n: Record<string, string>;\n\texport let loading: boolean = false;\n\texport let renderers: IRenderers = null;\n\texport let result: IResult = null;\n\n\tconst dispatch = createEventDispatcher();\n\n\tlet el: HTMLElement;\n\tlet scrolled: boolean = false;\n\tlet pageSize: number = 10;\n\tlet maxItems: number = pageSize;\n\tlet expandedItems: string[] = [];\n\tlet forceExpanded: boolean = false;\n\n\t$: categories = result?.items?.reduce((acc, item) => {\n\t\tif (item.doc.category && !acc.includes(item.doc.category)) {\n\t\t\tacc.push(item.doc.category);\n\t\t}\n\t\treturn acc;\n\t}, ['*']);\n\n\t$: onCategoriesUpdate(categories);\n\n\t$: filteredItems = getFilteredItems(result?.items, category, expandedItems);\n\n\t$: slicedFilteredItems = filteredItems?.slice(0, maxItems);\n\n\tonMount(() => {\n\t\trequestAnimationFrame(() => {\n\t\t\tonScroll();\n\t\t});\n\t});\n\n\tfunction getFilteredItems(items: IResultItem[], _category: string, _expandedItems: string[]) {\n\t\tconst filtered = category === '*' ? items : items?.filter((item) => {\n\t\t\t\treturn item.doc.category === category;\n\t\t});\n\t\tforceExpanded = filtered?.length === 1;\n\t\treturn filtered?.reduce((acc, item) => {\n\t\t\tacc.push(item);\n\t\t\tif (item.children?.length && (forceExpanded || expandedItems.includes(item.ref))) {\n\t\t\t\tacc.push(...item.children);\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\t}\n\n\tfunction onCategoriesUpdate(_categories: string[]) {\n\t\tif (categories?.length === 2) {\n\t\t\tcategory = categories[1];\n\t\t} else if (categories?.length === 1 || !categories?.includes(category)) {\n\t\t\tcategory = '*';\n\t\t}\n\t}\n\n\tfunction onCategoryClick(category: string) {\n\t\tdispatch('category', category);\n\t}\n\n\tfunction onItemClick(item: IResultItem) {\n\t\tdispatch('selection', item);\n\t}\n\n\tfunction onItemExpand(item: IResultItem) {\n\t\tif (expandedItems.includes(item.ref)) {\n\t\t\texpandedItems = expandedItems.filter((ref) => ref !== item.ref);\n\t\t} else {\n\t\t\texpandedItems = [...expandedItems, item.ref];\n\t\t}\n\t}\n\n\tfunction onScroll() {\n\t\tconst _scrolled = el?.scrollTop > 5;\n\t\tif (_scrolled !== scrolled) {\n\t\t\tscrolled = _scrolled;\n\t\t}\n\t\tif ((el?.scrollTop + el?.clientHeight) >= (el?.scrollHeight - 50)) {\n\t\t\tloadMore();\n\t\t}\n\t}\n\n\tfunction loadMore() {\n\t\tmaxItems = maxItems + pageSize;\n\t}\n\n\texport function scrollToTop() {\n\t\tif (el) {\n\t\t\tel.scrollTop = 0;\n\t\t}\n\t}\n\n\texport function navigateItems(dir: number, cls: string = 'focus') {\n\t\tconst els: Element[] = [].slice.call(el.querySelectorAll('a[tabindex]'));\n\t\tlet activeItem = el.querySelector('a:hover, a.' + cls);\n\t\tif (!activeItem) {\n\t\t\tdir = 0;\n\t\t\tactiveItem = els[0];\n\t\t}\n\t\tconst idx = Math.max(0, Math.min(els.length - 1, els.indexOf(activeItem) + dir));\n\t\tconst targetItem = els[idx];\n\t\tactiveItem?.classList.remove(cls);\n\t\ttargetItem.classList.add(cls);\n\t\tconst ref = targetItem.getAttribute('data-ref');\n\t\tconst item = ref && result.items.find((item) => item.ref === ref);\n\t\tif (item) {\n\t\t\tdispatch('selection', item);\n\t\t}\n\t\ttargetItem.scrollIntoView({\n\t\t\tbehavior: 'smooth',\n\t\t});\n\t}\n</script>\n\n{#if renderers?.header}\n<div class=\"searchbox-results-header\">\n\t<Renderer renderer={renderers.header} args={[result]} />\n</div>\n{/if}\n\n{#if categories?.length > 1}\n<div class=\"searchbox-results-categories\">\n\t<div class=\"searchbox-results-categories-wrap\">\n\t\t<ul>\n\t\t\t{#if categories.length > 2}\n\t\t\t<li>\n\t\t\t\t<span role=\"button\" class:active={category === '*'} on:click={() => onCategoryClick('*')}>{i18n.all}</span>\n\t\t\t</li>\n\t\t\t{/if}\n\t\t\t{#each categories.slice(1) as cat}\n\t\t\t<li>\n\t\t\t\t<span role=\"button\" class:active={category === cat} on:click={() => onCategoryClick(cat)}>{cat}</span>\n\t\t\t</li>\n\t\t\t{/each}\n\t\t</ul>\n\t</div>\n</div>\n{/if}\n\n<div bind:this={el} class=\"searchbox-results-items\" on:scroll={() => onScroll()}>\n\t<ul>\n\t\t{#if loading}\n\t\t<li class=\"searchbox-results-text\">\n\t\t\t{i18n.loading}\n\t\t</li>\n\n\t\t{:else if !filteredItems?.length}\n\t\t<li class=\"searchbox-results-text\">\n\t\t\t{i18n.no_results}\n\t\t</li>\n\n\t\t{:else if slicedFilteredItems}\n\t\t\t{#each slicedFilteredItems as item}\n\t\t\t<ResultItem\n\t\t\t\t{item}\n\t\t\t\t{i18n}\n\t\t\t\t{forceExpanded}\n\t\t\t\trenderer={renderers?.item}\n\t\t\t\texpanded={expandedItems.includes(item.ref)}\n\t\t\t\ton:click={(ev) => onItemClick(ev.detail)}\n\t\t\t\ton:expand={(ev) => onItemExpand(ev.detail)}\n\t\t\t/>\n\t\t\t{/each}\n\t\t{/if}\n\n\t\t{#if filteredItems?.length > maxItems}\n\t\t<li class=\"searchbox-results-load-more\">\n\t\t\t<button type=\"button\" on:click|preventDefault={() => loadMore()}>{i18n.load_more}</button>\n\t\t</li>\n\t\t{/if}\n\t</ul>\n</div>\n\n{#if renderers?.footer}\n<div class=\"searchbox-results-footer\">\n\t<Renderer renderer={renderers.footer} args={[result]} />\n</div>\n{/if}","export default {\n  all: 'All',\n  loading: 'Loading...',\n  load_more: 'Load more',\n  more_on_this_page: '{count} more on this page',\n  no_results: 'No results found.',\n};\n","export function debounce(fn: (...args: unknown[]) => void, delay: number) {\n  let timeout: any;\n  return (...args: any[]) => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n}\n","<script lang=\"ts\">\n\timport { onDestroy, onMount } from 'svelte';\n\timport { Searchbox } from './searchbox';\n\timport Dropdown from './components/Dropdown.svelte';\n\timport Results from './components/Results.svelte';\n\timport strings from './strings';\n\timport { debounce } from './helpers';\n\timport type { IOptions, IResult, IResultItem } from './types';\n\t\n\texport let options: IOptions;\n\n\tconst _onTermChange = debounce(onTermChange, 150);\n\tconst _positionDropdown = debounce(positionDropdown, 10);\n\tconst indexName: string = 'index';\n\tconst baseUrl = document.currentScript?.getAttribute('src')?.replace(/\\/[^\\/]$/, '') || '';\n\tconst workerScriptUrl = options.worker || `${baseUrl}/searchbox.worker.min.js`;\n\n\tlet category: string = '*';\n\tlet dropdown: Dropdown;\n\tlet dropdownResults: Results;\n\tlet focused: boolean = false;\n\tlet form: HTMLFormElement;\n\tlet i18n: Record<string, string> = Object.assign({}, strings, options.strings || {});\n\tlet input: HTMLInputElement;\n\tlet loading: boolean = false;\n\tlet result: IResult;\n\tlet search: Searchbox = new Searchbox(workerScriptUrl);\n\tlet selectedItem: IResultItem = null;\n\tlet showDropdown: boolean = false;\n\tlet suggestionsResult: IResult;\n\tlet results: Results;\n\n\t$: showDropdown && _positionDropdown();\n\n\tonDestroy(() => {\n\t\tdocument.removeEventListener('scroll', onDocumentScroll);\n\t\tinput.removeEventListener('focus', onInputFocus);\n\t\tinput.removeEventListener('blur', onInputBlur);\n\t\tinput.removeEventListener('input', onInputUpdate);\n\t\tinput.removeEventListener('keydown', onInputKeydown);\n\t\tif (form) {\n\t\t\tform.removeEventListener('submit', onFormSubmit);\n\t\t}\n\t\tif (results) {\n\t\t\tresults.$destroy();\n\t\t}\n\t\tsearch.destroyIndex(indexName);\n\t});\n\n\tonMount(() => {\n\t\tinput = options.input;\n\t\tform = input.closest('form');\n\n\t\tdocument.addEventListener('scroll', onDocumentScroll);\n\t\tinput.addEventListener('focus', onInputFocus);\n\t\tinput.addEventListener('blur', onInputBlur);\n\t\tinput.addEventListener('input', onInputUpdate);\n\t\tinput.addEventListener('keydown', onInputKeydown);\n\n\t\tif (form) {\n\t\t\tform.addEventListener('submit', onFormSubmit);\n\t\t}\n\n\t\tif (options.results) {\n\t\t\toptions.results.innerHTML = '';\n\t\t\tresults = new Results({\n\t\t\t\ttarget: options.results,\n\t\t\t\tprops: {\n\t\t\t\t\tcategory,\n\t\t\t\t\ti18n,\n\t\t\t\t},\n\t\t\t});\n\t\t\tresults.$on('category', (ev) => {\n\t\t\t\tonCategoryChange(ev.detail);\n\t\t\t});\n\t\t}\n\t});\n\n\tfunction positionDropdown() {\n\t\trequestAnimationFrame(() => {\n\t\t\tif (dropdown && showDropdown) {\n\t\t\t\tdropdown.position();\t\n\t\t\t}\n\t\t});\n\t}\n\n\tasync function getSuggestions(term: string) {\n\t\tloading = true;\n\t\tselectedItem = null;\n\t\tconst promise = options.customSearch\n\t\t\t? options.customSearch(term, true)\n\t\t\t: loadIndex().then(() => search.suggestions(indexName, term));\n\t\treturn promise.then((resp) => {\n\t\t\tsuggestionsResult = transformResult(resp);\n\t\t}).finally(() => {\n\t\t\tloading = false;\n\t\t});\n\t}\n\n\tasync function getResults(term: string) {\n\t\tloading = true;\n\t\tselectedItem = null;\n\t\tconst promise = options.customSearch\n\t\t\t? options.customSearch(term, false)\n\t\t\t: loadIndex().then(() => search.search(indexName, term, {\n\t\t\t\tlimit: options.limit,\n\t\t\t}));\n\t\treturn promise.then((resp) => {\n\t\t\tcategory = '*';\n\t\t\tresult = transformResult(resp);\n\t\t\tif (results) {\n\t\t\t\tresults.$set({\n\t\t\t\t\tcategory,\n\t\t\t\t\tresult,\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\tif (dropdownResults && showDropdown) {\n\t\t\t\t\t\tdropdownResults.scrollToTop();\t\n\t\t\t\t\t}\n\t\t\t\t\t_positionDropdown();\n\t\t\t\t});\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\tloading = false;\n\t\t});\n\t}\n\n\tasync function loadIndex() {\n\t\tif (!options.manifest) {\n\t\t\tthrow new Error(`Manifest URL is not configured.`);\n\t\t}\n\t\treturn search.ensureIndex(indexName, {\n\t\t\thighlight: options.highlight,\n\t\t\tinjectScripts: options.injectScripts,\n\t\t\tlanguages: options.languages,\n\t\t\tseparator: options.separator,\n\t\t\turl: options.manifest,\n\t\t});\n\t}\n\n\tfunction onCategoryChange(newCategory: string) {\n\t\tcategory = newCategory;\n\t\tif (dropdownResults && showDropdown) {\n\t\t\tdropdownResults.scrollToTop();\t\n\t\t}\n\t\tif (results) {\n\t\t\tresults.$set({\n\t\t\t\tcategory,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction onDocumentScroll() {\n\t\tif (showDropdown) {\n\t\t\t_positionDropdown();\n\t\t}\n\t}\n\n\tfunction onFormSubmit(ev: SubmitEvent) {\n\t\tev.preventDefault();\n\t\tgetResults(input.value.trim());\n\t}\n\n\tfunction onInputBlur() {\n\t\tfocused = false;\n\t\trequestAnimationFrame(() => {\n\t\t\tif (!focused) {\n\t\t\t\tshowDropdown = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction onInputFocus() {\n\t\tfocused = true;\t\n\t\tloadIndex();\n\t\tif (loading || result?.items) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (focused) {\n\t\t\t\t\tshowDropdown = true;\n\t\t\t\t}\n\t\t\t}, options.dropdownDelay || 0);\n\t\t}\n\t}\n\n\tfunction onInputKeydown(ev: KeyboardEvent) {\n\t\tif (ev.key === 'Enter') {\n\t\t\tif (selectedItem?.doc?.link) {\n\t\t\t\tlocation.assign(selectedItem?.doc?.link);\n\n\t\t\t} else {\n\t\t\t\tgetResults(input.value.trim());\n\t\t\t\tinput.blur();\n\t\t\t}\n\t\t} else if (ev.key === 'Escape') {\n\t\t\tif (focused) {\n\t\t\t\tev.preventDefault();\n\t\t\t\tinput.blur();\n\t\t\t}\n\t\t} else if (ev.key === 'ArrowUp' || (ev.key === 'Tab' && ev.shiftKey)) {\n\t\t\tev.preventDefault();\n\t\t\tdropdownResults?.navigateItems(-1);\t\n\n\t\t} else if (ev.key === 'ArrowDown' || ev.key === 'Tab') {\n\t\t\tev.preventDefault();\n\t\t\tdropdownResults?.navigateItems(1);\t\n\t\n\t\t} else if (ev.key === 'Shift') {\n\t\t\tev.preventDefault();\n\n\t\t} else {\n\t\t\t_onTermChange(input.value.trim());\n\t\t}\n\t}\n\n\tfunction onInputUpdate() {\n\t\t_onTermChange(input.value.trim());\n\t}\n\n\tfunction onSelection(item: IResultItem) {\n\t\tif (options.suggestions) {\n\t\t\tinput.value = item.doc.suggestion || item.doc.title;\n\t\t\tinput.setSelectionRange(input.value.length, input.value.length);\n\n\t\t} else {\n\t\t\tselectedItem = item;\n\t\t}\n\t}\n\n\tfunction onTermChange(term: string) {\n\t\tif (term) {\n\t\t\tif (focused && !showDropdown) {\n\t\t\t\tshowDropdown = true;\n\t\t\t}\n\t\t\tif (options.suggestions) {\n\t\t\t\tgetSuggestions(term);\n\t\t\t} else {\n\t\t\t\tgetResults(term);\n\t\t\t}\n\t\t} else {\n\t\t\tresult = null;\n\t\t\tif (showDropdown) {\n\t\t\t\tshowDropdown = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction transformResult(result: IResult) {\n\t\tif (options.transform) {\n\t\t\tresult.items = result.items.map((item) => {\n\t\t\t\titem.doc = options.transform(item.doc, item, result);\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\tif (options.groupBy) {\n\t\t\tresult = groupResult(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction groupResult(result: IResult) {\n\t\tconst grouped = result.items.reduce((acc, item) => {\n\t\t\tconst groupBy = typeof options.groupBy === 'function' ? options.groupBy(item.doc) : item.doc[options.groupBy];\n\t\t\tacc.set(groupBy, [...acc.get(groupBy) || [], item]);\n\t\t\treturn acc;\n\t\t}, new Map<string, IResultItem[]>());\n\t\tresult.items = [...grouped.values()].reduce((acc: IResultItem[], items: IResultItem[]) => {\n\t\t\tacc.push({\n\t\t\t\t...items[0],\n\t\t\t\tchildren: items.slice(1),\n\t\t\t});\n\t\t\treturn acc;\n\t\t}, [] as IResultItem[]).sort((a, b) => {\n\t\t\treturn a.children?.length > b.children?.length ? -1 : 1;\n\t\t});\n\t\treturn result;\n\t}\n</script>\n\n{#if showDropdown}\n<Dropdown bind:this={dropdown} anchor={options.anchor || input} align={options.align} width={options.width}>\n\t<Results\n\t\tbind:this={dropdownResults}\n\t\tbind:category={category}\n\t\trenderers={options.renderers}\n\t\t{i18n}\n\t\t{loading}\n\t\tresult={options.suggestions ? suggestionsResult : result}\n\t\ton:category={(ev) => onCategoryChange(ev.detail)}\n\t\ton:selection={(ev) => onSelection(ev.detail)}\n\t/>\n</Dropdown>\n{/if}","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport Searchbox from './Searchbox.svelte';\n\n\tlet manifestId: string = 'wiki';\n\tlet demo1: any;\n\tlet demo2: any;\n\n\t$: manifest = `/searchbox/demo/sample/${manifestId}.manifest.json`; // `https://privian.github.io/searchbox/demo/sample/${manifestId}.manifest.json`;\n\n\tonMount(() => {\n\t\tonManifestChange();\n\t});\n\n\tfunction onManifestChange() {\n\t\tsetupDemo1();\n\t\tsetupDemo2();\n\t}\n\n\tfunction setupDemo1() {\n\t\tif (demo1) {\n\t\t\tdemo1.$destroy();\n\t\t}\n\t\tconst input = document.querySelector('#input1') as HTMLInputElement;\n\t\tinput.value = '';\n\t\tdemo1 = new Searchbox({\n\t\t\ttarget: document.querySelector('.search1'),\n\t\t\tprops: {\n\t\t\t\toptions: {\n\t\t\t\t\tanchor: input.parentElement,\n\t\t\t\t\tgroupBy: (doc) => {\n\t\t\t\t\t\treturn doc?.link?.replace(/[\\#\\?].*$/g, '');\n\t\t\t\t\t},\n\t\t\t\t\tinput,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tsuggestions: false,\n\t\t\t\t\tdropdownDelay: 400,\n\t\t\t\t\trenderers: {\n\t\t\t\t\t\tfooter(result) {\n\t\t\t\t\t\t\tconst count = result?.items.reduce((acc, item) => acc + (item.children?.length || 0), result.items.length);\n\t\t\t\t\t\t\treturn (result ? `<div class=\"search1-poweredby\"><div>${count} results &bull; ${result.time / 1000}s</div>` : '')\n\t\t\t\t\t\t\t\t+`<div>Powered by <a href=\"https://github.com/privian/searchbox\">Searchbox</a></div></div>`;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tworker: 'dist/searchbox.worker.min.js',\n\t\t\t\t},\n\t\t\t}\n\t\t});\n\n\t}\n\n\tfunction setupDemo2() {\n\t\tif (demo2) {\n\t\t\tdemo2.$destroy();\n\t\t}\n\t\tconst input = document.querySelector('#input2') as HTMLInputElement;\n\t\tinput.value = '';\n\t\tdemo2 = new Searchbox({\n\t\t\ttarget: document.querySelector('.search2'),\n\t\t\tprops: {\n\t\t\t\toptions: {\n\t\t\t\t\tinput,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tresults: document.querySelector('#results2'),\n\t\t\t\t\tsuggestions: true,\n\t\t\t\t\tworker: 'dist/searchbox.worker.min.js',\n\t\t\t\t},\n\t\t\t}\n\t\t});\n\t}\n</script>\n\n<div class=\"demo\">\n\t<div>\n\t\t<h1><a href=\"https://github.com/privian/searchbox\">Searchbox</a> demo</h1>\n\t\t<p>Open-source alternative to Algolia search.</p>\n\t</div>\n\n\t<div class=\"dataset\">\n\t\t<p>Select dataset:</p>\n\n\t\t<select bind:value={manifestId} on:change={() => onManifestChange()}>\n\t\t\t<option value=\"wiki\">Wikipedia 1,000 articles (0.72MB)</option>\n\t\t\t<option value=\"nodejs\">NodeJS Full Docs (5.2MB)</option>\n\t\t</select>\n\n\t\t{#if manifestId === 'wiki'}\n\t\t<p>A sample of 1,000 summarized wikipedia pages related to Steve Jobs. Try searching for <b>steve, apple, iphone, california</b>.</p>\n\t\t{:else if manifestId === 'nodejs'}\n\t\t<p>Full Node.js documentation, including code examples. Try searching for <b>crypto, http request, fs write</b>.</p>\n\t\t{/if}\n\t</div>\n\n\t<div class=\"flex\">\n\t\t<div>\n\t\t\t<h1>Demo 1</h1>\n\t\t\t<h3>Floating search box</h3>\n\n\t\t\t<div class=\"search1\">\n\t\t\t\t<div class=\"search1-input\">\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n\t\t\t\t\t\t<path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t<input type=\"search\" id=\"input1\" autocomplete=\"off\" placeholder=\"Search...\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<h1>Demo 2</h1>\n\t\t\t<h3>Suggestions with custom results element</h3>\n\n\t\t\t<div class=\"search2\">\n\t\t\t\t<form>\n\t\t\t\t\t<input type=\"search\" id=\"input2\" autocomplete=\"off\" placeholder=\"Search...\" />\n\t\t\t\t\t<button type=\"submit\">Search</button>\n\t\t\t\t</form>\n\n\t\t\t\t<div class=\"search2-results\">\n\t\t\t\t\t<div id=\"results2\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\t.demo {\n\t\tcolor: #333;\n\t\tmargin: 0;\n\t\tpadding: 8px;\n\t\tbox-sizing: border-box;\n\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t}\n\t.demo :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.demo :global(h1) {\n\t\tfont-size: 150%;\n\t}\n\t.demo :global(p) {\n\t\tmargin: 0.5rem 0;\n\t}\n\t.demo :global(code) {\n\t\tcolor: rgb(129, 85, 138);\n\t\tfont-size: 0.85rem;\n\t}\n\t.demo :global(pre) {\n\t\tborder: 1px solid lightgrey;\n\t\tborder-radius: 5px;\n\t\tpadding: 0.5rem;\n\t}\n\t.demo :global(blockquote) {\n\t\tborder-left: 1px solid lightgray;\n\t\tmargin: 0;\n\t\tpadding-left: 0.5rem;\n\t}\n\t.demo :global(input),\n\t.demo :global(select),\n\t.demo :global(textarea) {\n\t\tfont-family: inherit;\n\t\tfont-size: inherit;\n\t\t-webkit-padding: 0.4em 0;\n\t\tpadding: 0.4em;\n\t\tmargin: 0 0 0.5em 0;\n\t\tbox-sizing: border-box;\n\t\tborder: 1px solid #ccc;\n\t\tborder-radius: 2px;\n\t}\n\t.flex {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\t.flex > * {\n\t\twidth: 50%;\n\t}\n\t.dataset {\n\t\tbackground-color: lightgray;\n\t\tpadding: 0.5rem;\n\t}\n\t.search2 input {\n\t\twidth: 250px;\n\t}\n\t.search2-results {\n\t\toverflow-x: auto;\n\t\tmax-width: 100%;\n\t}\n\t:global(.search1-poweredby) {\n\t\tjustify-content: space-between;\n\t\tdisplay: flex;\n\t}\n\t.search1-input {\n\t\talign-items: center;\n\t\tbackground: white;\n\t\tborder: 1px solid lightgray;\n\t\tborder-radius: 10px;\n\t\tdisplay: inline-flex;\n\t\tpadding: 2px 0.5rem;\n\t}\n\t.search1-input input {\n\t\tbackground: transparent;\n\t\tborder: none;\n\t\toutline: none;\n\t\tmargin: 0 0 0 0.5rem;\n\t\ttransition: all 0.3s;\n\t\twidth: 200px;\n\t}\n\t.search1-input input:focus {\n\t\twidth: 450px;\n\t}\n\t.search1-input:global(.searchbox-dropdown-visible) {\n\t\tborder-radius: 10px 10px 0 0;\n\t\tbox-shadow: 4px 4px 2px rgb(240, 240, 240);\n\t}\n\t:global(.search1 .searchbox-dropdown) {\n\t\tbox-shadow: 4px 4px 2px rgb(240, 240, 240);\n\t\tborder-radius: 0 0 10px 10px;\n\t}\n\t:global(.search1 .searchbox-results-snippet) {\n\t\tdisplay: -webkit-box;\n\t\toverflow: hidden;\n\t\t-webkit-line-clamp: 6;\n\t\t-webkit-box-orient: vertical;\n\t}\n\t:global(.search1 .searchbox-results-snippet pre) {\n\t\tmax-height: 100px;\n\t\toverflow: hidden;\n\t}\n\t:global(.searchbox-results-footer) {\n\t\tfont-size: 12px;\n\t\ttext-align: right;\n\t}\n\n\t@media screen and (max-width: 600px) {\n\t\t.flex > * {\n\t\t\twidth: 100%;\n\t\t}\n\t\t.search1-input {\n\t\t\twidth: 100%;\n\t\t}\n\t\t.search1-input input,\n\t\t.search1-input input:focus {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n</style>\n","import Demo from './Demo.svelte';\n\nconst demo = new Demo({\n  target: document.body,\n  props: {},\n});\n\nexport default demo;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","is_empty","obj","keys","length","get_slot_context","definition","ctx","$$scope","tar","src","k","slice","Set","current_component","is_hydrating","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","d","name","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","text","wholeText","select_option","select","option","__value","selected","selectedIndex","toggle_class","element","toggle","classList","HtmlTag","constructor","is_svg","this","e","n","c","html","h","m","nodeName","createElementNS","t","innerHTML","Array","from","childNodes","p","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","createEvent","initCustomEvent","custom_event","call","defaultPrevented","Map","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","after_update","outroing","outros","SvelteElement","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","root","ready","ret","rest","then","fill","make_dirty","hydrate","nodes","l","intro","window","globalThis","global","HTMLElement","super","attachShadow","mode","connectedCallback","key","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","$on","index","indexOf","splice","$set","$$props","$$set","SvelteComponent","SearchboxWorker","scriptUrl","messageId","pendingReplies","worker","Worker","onmessage","onMessage","bind","destroy","terminate","async","command","params","id","reject","set","postMessage","ev","message","promise","get","error","result","ESearchboxCommand","Searchbox","workerScriptUrl","workers","destroyIndex","getWorker","err","workerName","getWorkerName","ENSURE_INDEX","term","SUGGESTIONS","SEARCH","slot_ctx","onMouseDown","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","undefined","merged","len","Math","max","currentTarget","tagName","preventDefault","el","align","offset","animationDuration","pageOffset","width","remove","computedStyles","getComputedStyle","boundry","getBoundingClientRect","docHeight","documentElement","clientHeight","docWidth","clientWidth","borderSize","parseInt","borderTopWidth","borderBottomWidth","maxHeight","min","bottom","style","top","left","right","height","reduce","acc","Element","scrollHeight","setTimeout","args","renderer","content","replaceWith","doc","title","icon","snippet","children","link","ref","more_on_this_page","replace","String","expanded","forceExpanded","i18n","item","dispatch","onExpandChildrenClick","labels","isArray","split","label","stopPropagation","header","all","no_results","loading","includes","load_more","footer","category","renderers","scrolled","maxItems","expandedItems","onCategoryClick","onItemClick","onItemExpand","onScroll","_scrolled","scrollTop","loadMore","requestAnimationFrame","categories","items","filteredItems","_category","_expandedItems","filtered","getFilteredItems","slicedFilteredItems","dir","cls","els","querySelectorAll","activeItem","querySelector","idx","targetItem","find","scrollIntoView","behavior","cat","debounce","delay","timeout","clearTimeout","suggestions","indexName","_onTermChange","focused","showDropdown","selectedItem","customSearch","loadIndex","search","resp","suggestionsResult","transformResult","finally","getSuggestions","getResults","_positionDropdown","dropdown","position","baseUrl","currentScript","dropdownResults","form","input","results","assign","strings","limit","scrollToTop","manifest","ensureIndex","highlight","injectScripts","languages","separator","onCategoryChange","newCategory","onDocumentScroll","onFormSubmit","trim","onInputBlur","onInputFocus","dropdownDelay","onInputKeydown","location","blur","shiftKey","navigateItems","onInputUpdate","onSelection","suggestion","setSelectionRange","transform","groupBy","grouped","values","sort","groupResult","closest","demo1","demo2","manifestId","onManifestChange","parentElement","count","time","setupDemo1","setupDemo2","selected_option","body"],"sourceRoot":""}